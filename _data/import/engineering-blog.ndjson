{"_type":"post","_createdAt":"2019-01-13T19:00:00.000-05:00","publishedAt":"2019-01-13T19:00:00.000-05:00","title":"Interview with Brett Langdon","body":[{"_type":"block","markDefs":[{"_key":"862634aa7e84","_type":"link","href":"https://twitter.com/brett_langdon"},{"_key":"51c1d6cc3189","_type":"link","href":"https://github.com/brettlangdon/node-dogapi"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"In this edition of the Community Interview series, we sit down with "},{"_type":"span","marks":["em","862634aa7e84"],"text":"Brett Langdon"},{"_type":"span","marks":["em"],"text":", a long-time contributor within the Datadog ecosystem (notably as the maintainer of the "},{"_type":"span","marks":["em","51c1d6cc3189"],"text":"node-dogapi"},{"_type":"span","marks":["em"],"text":" library). To our great pleasure and honor, he recently joined the Datadog family! Read on to learn more about Brett and his approach to coding and open source participation."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"The interview"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Hello, I'm Dan with the Datadog Community team. I'm here with Brett.\" >}}"}]},{"_type":"block","markDefs":[{"_key":"8690ebf680b1","_type":"link","href":"https://github.com/brettlangdon/node-dogapi"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"Hi! I'm Brett Langdon. I'm a software engineer and DevOps consultant, and I like Datadog! I've been a long-time user at a number of different companies—since back in the old days before all the cool new features you have today, like APM, Logs, Watchdog, etc. I've also been a contributor since the start: I've got commits in the Agent, have written a bunch of Checks, and helped write the Celery Integration for APM. I also built and maintain an open source Node package for the Datadog API: "},{"_type":"span","marks":["8690ebf680b1"],"text":"node-dogapi"},{"_type":"span","marks":[],"text":".\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Fantastic! That is actually a much deeper range of contributions than I was aware of. Let's start at the beginning: over the past four or five years, from your perspective, how has the Datadog open source experience evolved?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"What's there in open source tools that are provided by Datadog is fantastic. For the most part I generally don't need to write anything custom for Datadog anymore, because over the past four, five, six years—however long—the open source community and Datadog have been contributing in big ways. Back in the beginning, if you used anything non-standard, you pretty much had to write it yourself and Datadog would hope that you would contribute it upstream for everyone else to use. But nowadays, everything is already available!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"Given the age of the projects, I think that it's actually easier for new contributors to contribute to Datadog because there are so many examples! There is pretty much a type of Check or Integration for almost any type of tool, and that makes everything really easy for people to write new tools, or write new Checks, or new Integrations—whenever they actually need to.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"I'd be interested to know about are your thoughts on what's under the hood—the API, either web or programmatic, for example. How have you seen that evolving over time?\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"I've been working with Datadog code for a long time…"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"It's been a while since I've contributed to the Agent or written a Check or anything like that. APM is probably the most recent thing that I've contributed to, and it was in beta so pieces were still moving around when I was contributing.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"To be fair, things are still moving around now, so…\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"Yes, and it's interesting! Datadog is investing time and effort in to re-factoring and re-thinking how someone goes about doing an Integration or writing code, or even what the code API looks like. As a user, you know things are getting better. Datadog listens to the community and listens to the pain points. You can tell they have a bunch of their own engineers working with this stuff every day.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"I think one of the problems that you end up with—and this is for any project that lives longer than six months—as you try and change, and refactor, and adjust some things internally, you're going to have some issues. For example, this uses the old style, and this uses the new style, and this is some weird hybrid… sometimes it can be hard just reviewing the code itself to know what the right way of doing something even is!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Haha, tell me about it!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"I've been working with Datadog code for a long time, and to be honest, I've never really read any of the documentation on the website. I usually just jump right into the code—just get in there and get my hands dirty. As someone who takes that approach, sometimes it can be a little like, \"Hm, that's interesting,\" or, \"Why are these two files structured completely differently?\" But, like I said, I think that just comes with the age of the project too. I know that Datadog has a responsibility to maintain as much backwards compatibility as possible in the best interest of the community.\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Datadog listens to the community and listens to the pain points."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Moving on from the Datadog code, you mentioned that you maintain a Node library as well? Please introduce us to that—what was the impetus for its development, for example?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"I'm going to pull up the repository right now. Wow, yeah, 2013 was the first commit on that! It's been around for a while, and it's gone through at least one full rewrite during that time. It's funny—I assumed you'd ask this question, and I was trying to think through why I started this project in the first place. I think the real reason is that I liked Datadog as a company, I saw that no one else had the library, and so I decided to write it. I've actually never used the package myself for work, or for a project, or for anything! I just saw that there was a need for it.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"That's… not the answer I was expecting, haha. How do you write and maintain a thing that you don't actually use?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"For something like this, you're writing an integration for an API that is documented. So as long as you keep the code up to date with the documentation, and you implement all the end-points, and make that available in a nice consistent way, it's actually not that hard. You just need to stay up to date on it. You don't need to use it to know how to use it, because it's just an API.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Alright, fair.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"Because I don't actually use it, I'm not actively contributing much code anymore. I maintain it, but right now it's driven by the community. There are issues from time to time: \"Hey, this endpoint is broken,\" or, \"This is a post instead of a get.\" I can take that feedback and make small changes as needed. But it's definitely just long-term maintenance as opposed to actively developing. I think that's a little unfortunate—but, like I said, I think that that just comes from the fact that I'm not actively using it, so that's the approach I take.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< img src=\"node-dogapi-github-network.png\" alt=\"Github network graph for node-dogapi\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"What's interesting is that it's mostly community contributions. You actually have your own community. It's sort of like orbits or degrees of separation.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"I think that is a great way to think about it.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"Personally, Datadog has always been very accepting of my contributions to the code base, on whatever project I've ever contributed. The engineers have been very open and responsive, and they're willing to work with me. I've always felt gratitude for the code that I've contributed. And that means a lot too. You know you make your first contribution and you have a bad experience, you're not gonna keep doing it.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Are you involved in any other open source projects that you have a role in maintaining, shepherding, mentoring, PR review, stuff like that?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"Not right now. I used to be much more active in the open source community as a whole, but my involvement tends to vary based on whatever job I have. If I'm in a job that does some open source contributions it just starts to become part of my day to day life. For the past year I've been a consultant and rarely do people pay consultants to develop open source software, so it's just a mind shift in where my time has been spent. But, with my next adventure, I'll be able to contribute more to open source.\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"I liked Datadog as a company…"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Brett\" type=\"a\" content=\"In fact—I will be working at Datadog! My actual job title will be Open Source Software Engineer, and I will be working on the Python APM. That was actually a very huge part in my decision. The opportunity to come to Datadog—a company that I care very deeply about—and to have this opportunity to get back into the community and to get back to contributing to open source. Well, that was pretty much the main deciding factor in joining the team.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Fantastic! Thanks for taking the time out to chat—and I look forward to working with you!\" >}}"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Keep the story going!"}]},{"_type":"block","markDefs":[{"_key":"9da636de8837","_type":"link","href":"https://docs.datadoghq.com/developers/"},{"_key":"fbb9e1e3dffd","_type":"link","href":"https://docs.datadoghq.com/developers/office_hours/"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"If you're interested in developing for the Datadog platform, check out the "},{"_type":"span","marks":["em","9da636de8837"],"text":"Developer Tools"},{"_type":"span","marks":["em"],"text":" section of the Datadog docs—don't miss our regular "},{"_type":"span","marks":["em","fbb9e1e3dffd"],"text":"Community Office Hours"},{"_type":"span","marks":["em"],"text":" either!"}]}]}
{"_type":"post","_createdAt":"2019-08-05T20:00:00.000-04:00","publishedAt":"2019-08-05T20:00:00.000-04:00","title":"Interview with Daniel Andrade","body":[{"_type":"block","markDefs":[{"_key":"03cd2f852e70","_type":"link","href":"https://datadoghq.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"Hi there. My name is Daniel, I'm with the community team here at "},{"_type":"span","marks":["03cd2f852e70"],"text":"Datadog"},{"_type":"span","marks":[],"text":", and I am here—somewhat confusingly—with another Daniel. Please go ahead and introduce yourself sir.\" >}}"}]},{"_type":"block","markDefs":[{"_key":"548f3fd32881","_type":"link","href":"https://www.balena.io/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Hi! My name is also Daniel. I'm a hardware hacker in residence at "},{"_type":"span","marks":["548f3fd32881"],"text":"Balena"},{"_type":"span","marks":[],"text":". I'm based in Lisbon but currently talking from Vietnam. I'm excited to be here today!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"I'm excited to have you here as well! So let's jump right in to you and your story.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"I've been working with software and hardware since I was very young. I graduated as an electrical engineer in 2014. Since then I've been working mostly with hardware design and web development, going from one to the other every two years. Now I'm just combining everything together and working with a lot of IoT projects.\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"I really like electronics and I really like building things."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"That sounds really interesting! What was the first project you worked on where those interests got combined together?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Back in 2008 I started building mood lamps where you can control the colors from a device on the Internet, a cell phone, over Bluetooth, whatever. That was the first connection of electronics with Internet, software, and web development—everything combined together. And then a few years ago I was working for a company called Unu in Berlin, where we were making a smart scooter.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"I left the company and decided to travel for a bit, then moved from Berlin to Lisbon and went back to web development full time because it was easier to work remotely as a freelancer. But then, after a year, I was kind of missing the smell of solder in the morning, haha.\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"I have all of my devices connected to the Balena Cloud and Datadog."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"That's why I started looking for a remote job that I could actually work with solder again, and why I joined Balena as a \"hardware hacker in residence\". I basically build use-case projects with the platform that the company developed, which is how I ended up building a project with Datadog. I really like electronics and I really like building things, so this works well.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"Excellent. Let's talk a little bit about your current role of \"hardware hacker in residence\". I really like that title. Can you tell me a little bit about that platform and about some projects you've built?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Balena builds the infrastructure for managing a fleet of IoT devices. The company started back in 2013. They managed to port Docker to the Raspberry Pi, ARM processors, and things like that. And that's when everything started—like oh my god, once you're able to run Docker on an embedded device, then you've solved so many of the IoT edge problems! Stuff like having to update the software, or update firmware over the air—and then if the network dies while you're updating, everything crashes and the device breaks.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< img src=\"balena-cloud-logo.png\" alt=\"Balena Cloud logo\" >}}"}]},{"_type":"block","markDefs":[{"_key":"67c10ff6cb0f","_type":"link","href":"https://www.balena.io/cloud"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"There are multiple different projects but the main one is called "},{"_type":"span","marks":["67c10ff6cb0f"],"text":"balenaCloud"},{"_type":"span","marks":[],"text":", which is everything that you need to run and manage a fleet of IoT devices. There are so many people who would benefit from using this, but they just don't really know that the company exists yet!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"So last year Balena said, \"okay, let's hire some people where their full time job is to promote the platform by building projects and helping people.\" That's me! I build on a daily basis. For example, the first thing I built was a Bitcoin traffic light. It's super simple—just like a fun weekend project that someone can build to learn a little bit more about the platform.\" >}}"}]},{"_type":"block","markDefs":[{"_key":"a71854cc22f2","_type":"link","href":"https://www.balena.io/blog/monitoring-your-balena-devices-with-datadog/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Everything can be done through the Balena platform once it's connected. Another project that I did was around "},{"_type":"span","marks":["a71854cc22f2"],"text":"how to connect a Raspberry Pi—or any other IoT device—to Datadog"},{"_type":"span","marks":[],"text":". For that we need to install the Datadog Agent and from there, people can start super easily managing and monitoring things like the power, the processing, how much RAM it's using, whatever. All the stuff that Datadog is really good at.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"That post was how you and I connected. It made me want to rush out and buy a kit, haha.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Yeah! So, imagine I am a user of Balena and I'm deploying temperature sensors around a shopping mall or something like that. I want to have all this information displayed in a Datadog dashboard. So all I need to do is go to the blog post, follow the tutorial—which should take like five to ten minutes to get started—and once everything is running, I have all of my devices connected to the Balena Cloud and Datadog.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"So, yeah, that's what I do. I try to do a project every one or two weeks depending on the complexity.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"It's really great that you have an opportunity to marry your two passions together, and to be able to do R&D projects and release them out to the public—out to the community. I imagine that you're learning new things every day.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Yeah. We have a lot of users going through the tutorials and giving us feedback where they tried things that we didn't think about. They are trying to do it wrong. We take that and try to make it easier for everybody the next time.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"What would be an example of something that a new user would get wrong? What common incorrect behavior or assumption?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"So, take for example someone that has never used git before. Right now there are two ways to push code from your computer to the device. The old way uses git. You clone the repository to your computer and then you add an origin to the Balena server. But some people SSH to the device and try from there. That's a common mistake. We're trying to figure out the best way to tackle it.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"So what made you go with Datadog for one of your more recent projects?\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"All the stuff that Datadog is really good at."}]},{"_type":"block","markDefs":[{"_key":"b05c62c1dc7b","_type":"link","href":"https://docs.datadoghq.com/agent/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"We really like Datadog because it's pretty straightforward to get started. I used Datadog before with one of my VPS servers, just to give it a try. It's so easy. You just "},{"_type":"span","marks":["b05c62c1dc7b"],"text":"install the Agent"},{"_type":"span","marks":[],"text":" and then it's already start tracking the CPU usage and all the other basic metrics. Version 6 of the Agent works great with ARM processors too.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"We also have users that already use Datadog with their products, so we have people on the forums asking about it, trying to figure it out. We help them on the forums, and if it's a common question or a tricky answer, we'll go and write a full tutorial.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Also, I'm, like, a really big fan of metrics in general. I love seeing data. Yeah, I'm such a nerd, but I love numbers. Being able to look at the screen, see a bunch of charts of my devices uptime and things like that—it's pretty cool.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"I can assure you that we feel the same way!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"You mentioned that you're based out of Portugal but you're currently in Vietnam—that's a cool change of pace! Personally, I'm big into remote work; in your estimation, is this something that you see as more and more important going forward, or is this something that is going to remain niche?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< img src=\"portugal-vietnam.png\" alt=\"Great circle route between Portugal and Vietnam\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"It varies a lot from person to person. My wife and I have been travelling in South East Asia since December. We decided to escape winter even though Portugal doesn't get too cold. She also works remotely so it works perfectly with us. But sometimes I do miss a little bit of the office life as well. Balena is almost fully remote. I think that around 90% of the company works remote even though we have offices in Athens, London, and Seattle.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Note: Since this interview was conducted, Daniel (Balena) has returned to Portugal—but he's still enjoying the remote-work lifestyle!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Companies should be more open to remote work because some people just work better from home; less distractions. Some people actually need the office environment. I think the best way would be to be able to do both. Sometimes you miss a little bit being in the office, but also you miss the freedom of being able to work remotely.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"Cool right on. Alright before we wrap up, do you want to give a shout out to a community or something that you're working on?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"Yeah! I am currently working on reviewing a few alternative "},{"_type":"span","marks":["em"],"text":"UPS [ed. uninterruptible power supply]"},{"_type":"span","marks":[],"text":" options to keep devices such as the Raspberry Pi or a balenaFin up and running in case there is a power outage—kinda important for unmanaged devices that can't go offline or just to improve overall reliability.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan (Datadog)\" type=\"q\" content=\"Awesome. Thanks for taking the time out to talk with me!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Daniel (Balena)\" type=\"a\" content=\"You're welcome, it was great talking to you, too.\" >}}"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Keep the story going!"}]},{"_type":"block","markDefs":[{"_key":"51666f2e74c3","_type":"link","href":"https://docs.datadoghq.com/developers/"},{"_key":"dbbc38e8cbd5","_type":"link","href":"https://docs.datadoghq.com/developers/office_hours/"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"If you're interested in developing for the Datadog platform, check out the "},{"_type":"span","marks":["em","51666f2e74c3"],"text":"Developer Tools"},{"_type":"span","marks":["em"],"text":" section of the Datadog docs—don't miss our regular "},{"_type":"span","marks":["em","dbbc38e8cbd5"],"text":"Community Office Hours"},{"_type":"span","marks":["em"],"text":" either!"}]}]}
{"_type":"post","_createdAt":"2019-01-13T19:00:00.000-05:00","publishedAt":"2019-01-13T19:00:00.000-05:00","title":"Interview with Zach Daniel","body":[{"_type":"block","markDefs":[{"_key":"9c42e0578f3d","_type":"link","href":"https://github.com/spandex-project/spandex"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"In this edition of the Community Interview series, we sit down with Zach Daniel: Elixir afficionado and maintainer of the Datadog Elixir APM (Tracing) library known as "},{"_type":"span","marks":["em","9c42e0578f3d"],"text":"Spandex"},{"_type":"span","marks":["em"],"text":". Read on to learn more about Elixir internals, observability concerns, and open source citizenship."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"The interview"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Hi! I'm Dan with the Datadog Community team. I'm here with Zach, who's made some great contributions to the Datadog ecosystem. Please introduce yourself!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Sure, my name is Zach Daniel. I'm a software engineer and I work at an ed tech company out of Chicago called Albert.io. I've been writing Elixir now for about two years.\" >}}"}]},{"_type":"block","markDefs":[{"_key":"e657eb699be5","_type":"link","href":"https://dockyard.com/"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Note: Since this interview was conducted, Zach has parted ways with Albert.io and is now at "},{"_type":"span","marks":["em","e657eb699be5"],"text":"DockYard"},{"_type":"span","marks":["em"],"text":", where he continues to bring the Elixir heat!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"What got you into Elixir? Professional? Personal? Mix of both?\" >}}"}]},{"_type":"block","markDefs":[{"_key":"803e51625e4c","_type":"link","href":"https://www.albert.io/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"I showed up at "},{"_type":"span","marks":["803e51625e4c"],"text":"Albert.io"},{"_type":"span","marks":[],"text":" and we needed to do some high performance stuff—really large scale statistics. We were using Node.js and RethinkDB and we realized that that stack wasn't really going to cut it for what we needed in the future, so we decided to switch to Postgres as our backing data source.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"We really couldn't adapt our existing Node.js infrastructure to use a Postgres database, primarily because it lacks good SQL primitives, or a good ORM. We started looking around at the popular web frameworks—things that provided good interactions with a database. We realized that Ecto and Phoenix for Elixir, two of the big community projects, would serve pretty much all of our needs.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Ecto was in fact just a very high quality tool to use for interacting with our database and as an ORM. That Ecto and Phoenix were so high quality was our biggest reason for going to Elixir. But at the same time we just thought to ourselves, \"what's something we really want to spend the next years working on, that we're really going to enjoy?\" We were happy that we could pick something so fun but also be practical.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"That's actually a rare combination.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"It is.\" >}}"}]},{"_type":"block","markDefs":[{"_key":"d705e725cab4","_type":"link","href":"https://github.com/spandex-project/spandex"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"I imagine that one can draw a line from there to participating in the Elixir library for Datadog—now known as "},{"_type":"span","marks":["d705e725cab4"],"text":"Spandex"},{"_type":"span","marks":[],"text":".\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< img src=\"spandex-logo.png\" alt=\"Spandex logo\" caption=\"Spandex logo\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Yeah, it's actually pretty interesting! Elixir on it's own provides a lot more introspection and monitoring capabilities, just sort of in the raw, than most other tools or frameworks do. You can just run "},{"_type":"span","marks":["code"],"text":"observer.start"},{"_type":"span","marks":[],"text":" in an Elixir application and it's going to pull up a graph of all of your running processes, and it's going to show you statistics.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"That kind of lulled us a little bit for the first, maybe, six to eight months. We got the idea that it just \"came with monitoring\"—but that really doesn't cut it in the long term. Those end up being very primitive interfaces for working with things at scale. Also, a lot of the built-in tracing tools say things like, \"don't use this in production\"…\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"So those tools exist but none of them really provide what I think is the most important aspect of monitoring: quick determination of issues. Ease of use matters, not just because we want something easy to use, but because there's so much data, you never know what you're looking for. So if you just have a UI that shows you all of this stuff, with no context on what's going wrong or what you might want to look at next, you're never going to be successful.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"We ended up switching to Datadog specifically because the observer user interface left a lot to be desired. We needed something that was just more snappy—something where I can get a quick overview of what's happening, or get quick alerts of what's going wrong.\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"… when writing in Elixir, it's just a lot simpler."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"That is an excellent reason to switch over, frankly. I imagine at that point you went, 'oh wait a minute, now we need a way to get our data from our our code, into Datadog'?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Yeah I mean really we knew from the outset that we were going to have to write a client, because there wasn't one at all. There may have been some small projects, but I'm pretty sure we were the first.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Honestly, I thought the project was going to be a lot easier than it was. The documentation seemed pretty straight-forward: send us a list of your spans and a list of your traces? Sure, this is all pretty cut and dry. But then I got into it and I realized there's a whole world to the concept of tracing an application, of doing it unobtrusively, of never failing.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"A monitoring tool should always opt to fail itself as opposed to causing whatever you're doing to fail. Likewise, if your monitoring tool is making your application slower it's doing a really bad job. It's difficult to manage all of that state without clogging up the works.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"There was a lot more to learn than I expected. There were a lot of little things, that if you do them correctly when you're building out your trace data to send it to Datadog, you'll get this really great UI sugar for it. You get these really fancy breakdowns on successes and failures by status code, for example. The documentation has gotten way better, but when I started the trace stuff was still in beta.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"What in the development process did you find particularly interesting? Particularly difficult? Particularly fulfilling to overcome?\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"[Erlang has] a simple process dictionary. Using it is generally a bad idea…"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"What I discovered is that to protect the code that you're working with, and to make it easy to integrate your tracing service, you have to use some sort of state management on the side. So if I say "},{"_type":"span","marks":["code"],"text":"trace.new"},{"_type":"span","marks":[],"text":" then "},{"_type":"span","marks":["code"],"text":"span.start"},{"_type":"span","marks":[],"text":", something else needs to manage where I am in that whole process, and to keep track of it for me. That way I don't have to weave in the whole trace to everything I'm doing. That clearly comes with a lot of ways to do it wrong—there's all sorts of mistakes you can make there.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Elixir is an immutable language, even though you have processes and you can store state like that, so I had to learn a lot about practical ways to use OTP to store state. I actually ended up going with a funny feature provided by OTP that, deep down in the Erlang documentation, it says that they didn't really want anybody to know about it: a simple process dictionary. Using it is generally a bad idea, but the process dictionary is what empowers things like Logger metadata and IEX shell history. It's a way to fake mutability in this immutable language. I don't know where my code is running, but there's always the process dictionary, so I use that to stack the spans and pop them off of that.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Another thing was just never being a bottleneck to the application when sending data. That proved to be fairly difficult too. We had to implement a lot of back pressure features. When the queue starts rising drastically, you make the clients wait until the queue goes down, which spreads the latency distribution across the system. You need all sorts of concurrency and latency management stuff, and I had to learn to make it into a useful tool that didn't break things.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"When you were developing the library, the Datadog features were still in beta, and the documentation wasn't yet complete. How did you figure out what features existed, what API endpoints could be called, how they should be called? Was that through looking at other code? Was that through trial and error?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"It was a mix. The primary way was by picking apart the existing Python and Ruby clients. The public Slack channel for Datadog provided more than few opportunities when I was really confused about how things were working—there was one gentleman, I forget his name, that came to the rescue a few times. Those were, and are, my two main resources.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Excellent! I'm happy that that the Slack channel was useful to you.\" >}}"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Oh, people are using this in their production applications! I need to step it up."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"When you were looking at the existing libraries, was there anything there that surprised you? Or anything there that you thought, \"wait a minute, I could do this better?\" Or, \"this is better—I'm going to do it that way?\"\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"I didn't really do any sort of quality analysis. What I do remember is feeling—and I feel like this often with Elixir tools—is that when writing in Elixir it's just a lot simpler. I remember thinking that there's an awful lot of code here that seemed overly complicated. Even now, I'm pretty confident that the Elixir client has significantly fewer lines of code.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"How did you get other people on board with the project? Was that just a professional obligation amongst your teammates or were you getting the word out?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"I didn't really do any sort of quality analysis. What I do remember is feeling—and I feel like this often with Elixir tools—is that when writing in Elixir it's just a lot simpler. I remember thinking that there's an awful lot of code here that seemed overly complicated. Even now, I'm pretty confident that the Elixir client has significantly fewer lines of code.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Internally, we had pretty good buy in at the time. Datadog's really slick, and there were lots of things that made it an easy decision—like we didn't have to host it ourselves, so the Ops team was already happy.\" >}}"}]},{"_type":"block","markDefs":[{"_key":"93a350952d89","_type":"link","href":"https://elixirweekly.net/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"In terms of the library, I put it on the "},{"_type":"span","marks":["93a350952d89"],"text":"Elixir Weekly newsletter"},{"_type":"span","marks":[],"text":" just because it was a reasonably decent library that I had made. I didn't make a big deal out of it because I was worried that I didn't know what I was doing. But then something interesting happened: it got more and more GitHub stars, and people started lodging more and more issues, and I realized, 'oh, people are using this in their production applications! I need to step it up.'\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Now there's another individual who's on the core team with me now: Greg Mefford, who's also on the core Nerves team for Elixir. We've worked through a lot of big organizational changes to make the library more generic.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< img src=\"spandex-zach-greg-commits.png\" alt=\"Zach and Greg's commit graph\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"So are you still actively contributing to Spandex or have you entered more of a maintenance mode?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"I am actively contributing. I'm building something on the side that is going to heavily utilize the Spandex core primitives—I think it's going to be a really interesting tool.\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Right on. And hopefully there will be native Datadog integration for that thing that you're building?\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Zach\" type=\"a\" content=\"Well, yeah!\" >}}"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"{{< interview name=\"Dan\" type=\"q\" content=\"Glad to hear it! Thanks for taking the time out to speak with me today—and I look forward to your next project!\" >}}"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Keep the story going!"}]},{"_type":"block","markDefs":[{"_key":"cb4ff2e148e3","_type":"link","href":"https://docs.datadoghq.com/developers/"},{"_key":"96d7b6bfd471","_type":"link","href":"https://docs.datadoghq.com/developers/office_hours/"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"If you're interested in developing for the Datadog platform, check out the "},{"_type":"span","marks":["em","cb4ff2e148e3"],"text":"Developer Tools"},{"_type":"span","marks":["em"],"text":" section of the Datadog docs—don't miss our regular "},{"_type":"span","marks":["em","96d7b6bfd471"],"text":"Community Office Hours"},{"_type":"span","marks":["em"],"text":" either!"}]}]}
{"_type":"post","_createdAt":"2019-11-13T19:00:00.000-05:00","publishedAt":"2019-11-13T19:00:00.000-05:00","title":"Around the waterbowl","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"OpenTracing with Scala"}]},{"_type":"block","markDefs":[{"_key":"ade379d71f93","_type":"link","href":"https://www.colisweb.com/en"},{"_key":"ea9bef273bd7","_type":"link","href":"https://github.com/Colisweb/scala-opentracing"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"OpenTracing is an API specification that provides consistency for distributed tracing and context propagation. Our friends at "},{"_type":"span","marks":["ade379d71f93"],"text":"Colisweb"},{"_type":"span","marks":[],"text":" recently developed "},{"_type":"span","marks":["ea9bef273bd7"],"text":"Scala OpenTracing"},{"_type":"span","marks":[],"text":", a Scala wrapper around the OpenTracing library."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"More Scala and Datadog"}]},{"_type":"block","markDefs":[{"_key":"a56a5cc48dcd","_type":"link","href":"https://github.com/NomadBlacky/scaladog"},{"_key":"a28664301ace","_type":"link","href":"https://www.datadoghq.com/summit/tokyo19/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Continuing the theme, "},{"_type":"span","marks":["a56a5cc48dcd"],"text":"scaladog"},{"_type":"span","marks":[],"text":" is a Datadog API client for Scala, as announced at "},{"_type":"span","marks":["a28664301ace"],"text":"Datadog Summit Tokyo"},{"_type":"span","marks":[],"text":"—pull requests welcome!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Circuit breaking with Micrometer"}]},{"_type":"block","markDefs":[{"_key":"bd1664fae735","_type":"link","href":"https://pivotal.io/"},{"_key":"11b20e6c6bf8","_type":"link","href":"https://content.pivotal.io/practitioners-blog/replacing-the-spring-cloud-services-circuit-breaker-dashboard"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Meanwhile, at "},{"_type":"span","marks":["bd1664fae735"],"text":"Pivotal"},{"_type":"span","marks":[],"text":", the Spring Cloud Services team recently faced a dilemma: their Circuit Breaker Dashboard was based on Netflix’s Hystrix Dashboard, which is being retired. To replace their Circuit Breaker Dashboard, they configured Micrometer to ship metrics to Datadog. "},{"_type":"span","marks":["11b20e6c6bf8"],"text":"Read how they did it"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Timing CircleCI commands"}]},{"_type":"block","markDefs":[{"_key":"2688d002d2ea","_type":"link","href":"https://github.com/yuya-takeyama/circle-dd-bench"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"CircleCI is a popular platform used by projects around the world both large and small. Using "},{"_type":"span","marks":["2688d002d2ea"],"text":"circle-dd-bench"},{"_type":"span","marks":[],"text":", you can wrap an arbitrary command in CircleCI and then report that running time up to Datadog as a custom metric."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Terraforming monitors"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Did you know that you can export your Datadog monitors as JSON? When viewing a monitor, click the gear icon in the upper right corner and select export. But what if you need another format?"}]},{"_type":"block","markDefs":[{"_key":"ec38e155dc0f","_type":"link","href":"https://www.intercom.com/"},{"_key":"94b15faa214a","_type":"link","href":"https://chrome.google.com/webstore/detail/datadog-to-terraform-conv/lafmglpipgongjmbbjngmboifpaodemk"},{"_key":"b27cfdfff524","_type":"link","href":"https://github.com/intercom/datadog-to-terraform"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Our friends at "},{"_type":"span","marks":["ec38e155dc0f"],"text":"Intercom"},{"_type":"span","marks":[],"text":" love Terraform and have been practicing monitoring-as-code. Their Datadog to Terraform Converter tool makes it easy to convert your monitor’s JSON into Terraform alarm format. "},{"_type":"span","marks":["94b15faa214a"],"text":"Install the browser extension"},{"_type":"span","marks":[],"text":" from the Chrome web store or "},{"_type":"span","marks":["b27cfdfff524"],"text":"view the source code"},{"_type":"span","marks":[],"text":" on Github."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Monitoring the Kubernetes Control Plane"}]},{"_type":"block","markDefs":[{"_key":"6c49c2df0b54","_type":"link","href":"https://itnext.io/kubernetes-control-plane-monitoring-using-datadog-and-helm-6c2daf2039d8"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"The Kubernetes Control Plane forms the central nervous system of a Kubernetes cluster by maintaining a record of all of the Kubernetes Objects in the system, and running continuous control loops to verify and manage those objects’ state. Ensuring the Control Plane is running efficiently is critical to operating a Kubernetes cluster. In his recent blog post, Krishna Sharma demonstrates how to "},{"_type":"span","marks":["6c49c2df0b54"],"text":"monitor the Kubernetes Control Plane using Datadog and Helm"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Keep an eye on your NVIDIA GPUs"}]},{"_type":"block","markDefs":[{"_key":"de0d5a874fcf","_type":"link","href":"https://github.com/ngi644/datadog_nvml"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"From machine learning to cryptocurrency, GPUs are used for more than just gaming. Thanks to "},{"_type":"span","marks":["de0d5a874fcf"],"text":"datadog_nvml"},{"_type":"span","marks":[],"text":", you can easily gather and report NVIDIA GPU statistics within Datadog, so you can keep a close eye on your resource usage and bounds during high-intensity processing jobs."}]}]}
